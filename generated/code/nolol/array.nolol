// This script implements a simple array data-structure that can be used by other chips
// Set :d to the value you want to storem :a to the address to store it into and :m to 1 in order to store a value
// Set :m to 0 and :a to the index to retrieve a value into :d

// is good
// is best
define data=:d
define addr=:a
define write=:m

// you can use a line-lable as (read-only) variable
:o="table> is at line: "+table

// goto current line plus the value of offset.
table> $ goto table+addr $

// By using "$ stmt1; stmt2 $" we make sure, that the resulting yolol-code will have the EXACT same line-layout
// If you need an if inside a single line, that is also possible. But using this style of ifs gives you a hard length-limit
$ if write then mem1=data else data=mem1 end; addr=0; goto table $
$ if write then mem2=data else data=mem2 end; addr=0; goto table $
$ if write then mem3=data else data=mem3 end; addr=0; goto table $
$ if write then mem4=data else data=mem4 end; addr=0; goto table $
$ if write then mem5=data else data=mem5 end; addr=0; goto table $
$ if write then mem6=data else data=mem6 end; addr=0; goto table $
